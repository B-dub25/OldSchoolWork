probe process(@1).function("balanced").call ? {	if ( ! isinstr("balanced", "___STAP_MARKER___")) { callFunction("balanced",tid()) } 	}	probe process(@1).function("balanced").return ? {		if ( ! isinstr("balanced", "___STAP_MARKER___")) returnFunction("balanced",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("isPalindrome").call ? {	if ( ! isinstr("isPalindrome", "___STAP_MARKER___")) { callFunction("isPalindrome",tid()) } 	}	probe process(@1).function("isPalindrome").return ? {		if ( ! isinstr("isPalindrome", "___STAP_MARKER___")) returnFunction("isPalindrome",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("decToBin").call ? {	if ( ! isinstr("decToBin", "___STAP_MARKER___")) { callFunction("decToBin",tid()) } 	}	probe process(@1).function("decToBin").return ? {		if ( ! isinstr("decToBin", "___STAP_MARKER___")) returnFunction("decToBin",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("decToHex").call ? {	if ( ! isinstr("decToHex", "___STAP_MARKER___")) { callFunction("decToHex",tid()) } 	}	probe process(@1).function("decToHex").return ? {		if ( ! isinstr("decToHex", "___STAP_MARKER___")) returnFunction("decToHex",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("decToOctal").call ? {	if ( ! isinstr("decToOctal", "___STAP_MARKER___")) { callFunction("decToOctal",tid()) } 	}	probe process(@1).function("decToOctal").return ? {		if ( ! isinstr("decToOctal", "___STAP_MARKER___")) returnFunction("decToOctal",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("multibaseOutput").call ? {	if ( ! isinstr("multibaseOutput", "___STAP_MARKER___")) { callFunction("multibaseOutput",tid()) } 	}	probe process(@1).function("multibaseOutput").return ? {		if ( ! isinstr("multibaseOutput", "___STAP_MARKER___")) returnFunction("multibaseOutput",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}
probe process(@1).function("main").call ? {	if ( ! isinstr("main", "___STAP_MARKER___")) { callFunction("main",tid()) } 	}	probe process(@1).function("main").return ? {		if ( ! isinstr("main", "___STAP_MARKER___")) returnFunction("main",tid())	else { printf("?%d,,%s\n", tid(), user_string(strtol(tokenize($$return, "return="),16)))}}

probe begin{
printf("\nPROBE_BEGIN\n")
serial=1
startTime = 0;
printf("mp4\n")
}global serial
global startTime
global finalTime


function callFunction(probefunc, tid) {
	if (startTime == 0) {
		startTime = gettimeofday_ns()
		printf("<%s,,%d,,%d,,%d\n", probefunc, serial, startTime, tid)
	} else
	    printf("<%s,,%d,,%d,,%d\n", probefunc, serial, gettimeofday_ns(), tid)
	serial++
}

function returnFunction(probefunc, tid) {
	finalTime = gettimeofday_ns()
	printf(">%s,,%d,,%d\n", probefunc, finalTime, tid)
}


probe end {
	printf("-%d\n",finalTime);
	printf("+%d\n",finalTime - startTime);
    exit()
}

probe process(@1).end {
finalTime = gettimeofday_ns()
}
