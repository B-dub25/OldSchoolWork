/*
 * Node.h
 *
 *  Created on: Sep 25, 2013
 *      Author: brian
 */

#ifndef NODE_H_
#define NODE_H_

#include <iostream>
#include <string>
#include <exception>
using namespace std;
template<typename T>
class node {

	friend ostream& operator<<(ostream& os, const node<T>& obj);
	typename friend class miniList<T>;

public:
	node(T info = 0, node* link = NULL) :
			data(info), nextLink(link) {
	}
	;
private:
	T data;
	node<T>* nextLink;
};
template<typename T>
ostream& operator<<(ostream& os, const node<T>& obj) {

	return os << obj.data;
}

#endif /* NODE_H_ */
