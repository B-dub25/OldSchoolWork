/*
 * driver.cpp
 *
 *  Created on: Oct 1, 2013
 *      Author: brian
 */

#include "intEntery.h"
#include <list>
#include <cmath>
void loadPrimes(list<intEntery>& primes, int n) {

	int sum = 1;
	list<intEntery>::iterator it;

	while (sum < n) {
		for (int i = 2; i < n; ++i) {
			if (n % i == 0) {
				intEntery primeFactor(i);
				primes.push_back(primeFactor);
				n = n / 2;
				sum *= i;
			}
		}
	}

	for(it = primes.begin() ; it != primes.end(); ++it){
		for(list<intEntery>::iterator it2 = it++; it2 != primes.end(); ++it){
			if(*it == *it2){
				cout << *it2;
				intEntery temp(*it);
				temp.increamt();
				primes.erase(it);
				primes.push_front(temp);
			}
		}
	}
	primes.sort();
}

int main(int argc, char **argv) {

	list<intEntery> mylist;
	list<intEntery> otherList;
	list<intEntery>::iterator it;
	loadPrimes(mylist, 60);
	for(it = mylist.begin(); it != mylist.end(); ++it)
		cout << *it;
	cout << endl;
	loadPrimes(otherList, 18);

}

