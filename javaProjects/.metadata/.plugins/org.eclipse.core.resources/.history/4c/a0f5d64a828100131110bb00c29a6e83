import java.util.Arrays;


public class DataStructorRecord {

	private Stack emptySpots;
	private int dataBasePointer;
	private SortedArray<String>  identification;
	private SortedArray<String>  firstName;
	private SortedArray<String>  lastName;
	private DataBaseRecord[]     records;
	private static final int     MAX = 100;
	
	   
	public DataStructorRecord() {

		dataBasePointer = 0;
		identification  = new SortedArray<>();
		firstName       = new SortedArray<>();
		lastName	    = new SortedArray<>();
		records         = new DataBaseRecord[MAX];
		records         = Arrays.copyOf(records, MAX, DataBaseRecord[].class);
		
	}
	
	public void insert(String id, String fName, String lName) {
		
		if(identification.findID(id) < 0)
			return; // already in the list
		else if(emptySpots.isEmpty()){	
		identification.setDataType(id, dataBasePointer);
		firstName.setDataType(fName, dataBasePointer);
		lastName.setDataType(lName, dataBasePointer);
		records[dataBasePointer].setData(id, fName, lName);
		++dataBasePointer;
		}
		else{
			int position = emptySpots.pop();
			//int index = identification.findID(records[position]);
			identification.update(records[position].getId(), id);
			firstName.update(records[position].getFirstName(), fName);
			lastName.update(records[position].getLastName(), lName);
			records[position].setData(id, fName, lName);
		}
	}
	
	
	
	
}
